dnl -- include additional autoconf commands here
dnl -- do not include AC_OUTPUT, this is called for you

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_MODE_T
AC_TYPE_SIZE_T
AC_CHECK_TYPES([long long],[],[exit 1])
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_MEMCMP
AC_FUNC_MMAP
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gettimeofday socket strerror)

dnl These are mostly for solaris
AC_CHECK_LIB(socket,main)
AC_CHECK_LIB(nsl,main)
AC_CHECK_LIB(xnet,main)
AC_CHECK_LIB(resolv,main)

dnl Figure out what kind of varargs this platform supports
# check for flavours of varargs macros
AC_MSG_CHECKING(for ISO C99 varargs macros in C)
AC_TRY_COMPILE([],[
int a(int p1, int p2, int p3);
#define call_a(...) a(1,__VA_ARGS__)
call_a(2,3);
],g_have_iso_c_varargs=yes,g_have_iso_c_varargs=no)
AC_MSG_RESULT($g_have_iso_c_varargs)
if test "x$g_have_iso_c_varargs" = "xyes" ; then
  dnl instead of adding these to the config.h, we want to substitute them
  dnl directly in the header we ship out with the library
  HAVE_ISO_C_VARARGS="#define HAVE_ISO_VARARGS"
  AC_SUBST(HAVE_ISO_C_VARARGS)
fi

dnl - AC_MSG_CHECKING(for ISO C99 varargs macros in C++)
dnl - if test "$CXX" = ""; then
dnl - dnl No C++ compiler
dnl - g_have_iso_cxx_varargs=no
dnl - else
dnl -   AC_LANG_CPLUSPLUS
dnl -   AC_TRY_COMPILE([],[
dnl - int a(int p1, int p2, int p3);
dnl - #define call_a(...) a(1,__VA_ARGS__) call_a(2,3);
dnl - ],g_have_iso_cxx_varargs=yes,g_have_iso_cxx_varargs=no)
dnl -   AC_LANG_C
dnl - fi
dnl - AC_MSG_RESULT($g_have_iso_cxx_varargs)
dnl - if test "x$g_have_iso_cxx_varargs" = "xyes" ; then
dnl -   dnl instead of adding these to the config.h, we want to substitute them
dnl -   dnl directly in the header we ship out with the library
dnl -   HAVE_ISO_CXX_VARARGS="#define HAVE_ISO_VARARGS"
dnl -   AC_SUBST(HAVE_ISO_CXX_VARARGS)
dnl - fi

AC_MSG_CHECKING(for GNUC varargs macros)
AC_TRY_COMPILE([],[
int a(int p1, int p2, int p3);
#define call_a(params...) a(1,params)
call_a(2,3);
],g_have_gnuc_varargs=yes,g_have_gnuc_varargs=no)
AC_MSG_RESULT($g_have_gnuc_varargs)
if test "x$g_have_gnuc_varargs" = "xyes" ; then
  dnl instead of adding these to the config.h, we want to substitute them
  dnl directly in the header we ship out with the library
  HAVE_GNUC_C_VARARGS="#define HAVE_GNUC_VARARGS"
  AC_SUBST(HAVE_GNUC_C_VARARGS)
fi

dnl - AC_MSG_CHECKING(for GNUC varargs macros in C++)
dnl - if test "$CXX" = ""; then
dnl - dnl No C++ compiler
dnl - g_have_iso_cxx_varargs=no
dnl - else
dnl -   AC_LANG_CPLUSPLUS
dnl -   AC_TRY_COMPILE([],[
dnl - int a(int p1, int p2, int p3);
dnl - #define call_a(params...) a(1,params)
dnl - call_a(2,3);
dnl - ],g_have_gnuc_cxx_varargs=yes,g_have_gnuc_cxx_varargs=no)
dnl -   AC_LANG_C
dnl - fi
dnl - AC_MSG_RESULT($g_have_gnuc_cxx_varargs)
dnl - if test "x$g_have_gnuc_cxx_varargs" = "xyes" ; then
dnl -   dnl instead of adding these to the config.h, we want to substitute them
dnl -   dnl directly in the header we ship out with the library
dnl -   HAVE_GNUC_CXX_VARARGS="#define HAVE_GNUC_VARARGS"
dnl -   AC_SUBST(HAVE_GNUC_CXX_VARARGS)
dnl - fi

AC_CONFIG_FILES([src/mondemandlib.h])
